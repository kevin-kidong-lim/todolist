10일 할일
  도커파일 수정하기 ( 디비명 변경 등..)
  기존 폴더 수정 ( myname change )
  실행해보기 .. 잘되나 보자 , 소스 변경하기 ,
  vite 적용하기
  PS C:\WORKdev\00Myname\webever> npm install -g npm@latest
PS C:\WORKdev\00Myname\webever> node -v
v19.8.1
PS C:\WORKdev\00Myname\webever> node -v
v19.8.1
C:\WINDOWS\system32>nvm use 21.6.0
Now using node v21.6.0 (64-bit)

C:\WINDOWS\system32>node -v
v21.6.0


  PS C:\WORKdev\00Myname\webever> npm create vite@latest
Need to install the following packages:
  create-vite@5.2.3
Ok to proceed? (y)
cd todolist-app
  npm install
  npm run format
  npm run dev

  ui 작업
  db 작업
compose 파일에 컨테이너 이름변경, myname -> todolist 이후 up
docker-compose -f docker-compose.dev.yml up -d db
 docker-compose -f docker-compose.dev.yml up -d back
docker-compose exec back bash
docker-compose down back     
docker-compose down db     
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc"  -delete
초기 마이그레이션 실행
python manage.py makemigrations
python manage.py migrate
관리자 계정생성.
python manage.py createsuperuser
admin/!@ddsmyname00
http://localhost:8000/admin/login/?next=/admin/

common_code 마이그레이션 . 두번해준다. 한번할때 몇가지 항목이 오류나서, 다시해주면 됨.
python manage.py copy_common_code  

11일 할일
  django crud 작업
  문서작업 및 소스저리 후 submit 하기 

API 목록
회원
 - 회원등록
    http://127.0.0.1:8000/api/member/register/   > Pst
    http://127.0.0.1:8000/api/member/detail/kevin

 - 로그인
    http://127.0.0.1:8000/api/member/token2/     >post 
 - todo 리스트
    목록 :
    http://127.0.0.1:8000/api/todolist/list/kevin?user_id=kevin&progress=all&page_size=5&notice_flag=123
    추가 : 
    http://127.0.0.1:8000/api/todolist/
요청 메서드:
POST
    수정 : 
    http://127.0.0.1:8000/api/todolist/detail/5
요청 메서드:
PUT
    삭제 : 
    http://127.0.0.1:8000/api/todolist/5
요청 메서드:
DELETE
  

프로젝트 요약:
프로젝트의 목적, 기능, 사용된 기술 등 프로젝트에 대한 간략한 개요를 제공해 주세요.

 목표를 세우고 목표를 달성하기 위한 세부 계획을 정리하는 기능을 구현한다.
 요구사항:
   단기 목표 설정
      - 카테고리 등록/수정/삭제 기능구현
      - 단기 목표 등록/수정/삭제 기능구현
      - 단기 목표에서 관리할 항목은 목표/시작일/종료일 구현
      - 단기 목표의 하위에 들어갈 할 일 에 대한 등록/수정/삭제 기능구현
      - 할일 에서 관리할 항목은 할일/
      - 
개발 과정: (그냥 과정을 설명해주세요)
할 일 목록 웹 애플리케이션 개발에 대한 접근 방식을 설명하세요. 다음과 같은 세부정보를 포함하세요.
* 계획 및 초기 설정
  > 요구사항을 정리한다.
  > 요구사항을 단기/중기 로 나눠서 우선순위를 정한다.
  > 단기는 바로 구현, 장기는 향후 구현할것을 정한다.
  > 요구사항에 맞는 화면 / 디비 설계를 한다
  > 개발 환경 선정 및 세팅
    : 웹서버 ( 프런트, 백엔트 )
      프런트 : nginx ,  
      connecting with back and front : 
      backend : django 
      개발언어 : vue3.js, python
      db : mysql
      container : Docker 
      //https://wnsgml972.github.io/setting/2020/07/20/docker/ 도커참고 자료.
 > db 모델링
 > api endpoint 정리
 
* 프론트엔드 개발(HTML, CSS, JavaScript 프레임워크)
* 백엔드 개발(기술 선택, 데이터베이스 설정, API 엔드포인트)
* 프론트엔드와 백엔드의 통합
* 인증 구현(해당하는 경우)
* 추가 기능 구현됨(있는 경우)


도커 작업
  로컬
   개발자는 바로 확인하기 위해. 
    npm run dev
    docker-compose -f docker-compose.dev.yml up -d back
    docker-compose -f docker-compose.dev.yml up -d db
    확인: localhost:5173
    
    처음확인할경우, 디비에 테이블등이 없기 때문에 생성후 작업을 해야함
    기존은.. 근ㅇ .
    
  배포용.
   docker-compose -f docker-compose.dev.yml up -d front --build
   docker-compose -f docker-compose.dev.yml up -d back --build
   docker-compose -f docker-compose.dev.yml up -d db --build
   확인 : localhost:9999 
   정상이면 push


디비 모델링

